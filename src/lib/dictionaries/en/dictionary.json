{
  "locale": "en",
  "theme": {
    "light": "Light",
    "dark": "Dark",
    "system": "System"
  },
  "header": {
    "home": "Home",
    "about": "About",
    "projects": "Projects",
    "skills": "Skills",
    "experiences": "Experiences",
    "contact": "Contact",
    "resume": "Resume",
    "themeButtonTitle": "Switch theme",
    "localeButtonTitle": "Switch language",
    "together": "Let's build something awesome together"
  },
  "resume": {
    "link": "/en/cv",
    "redirectLink": "https://drive.google.com/file/d/1CDhhUL_9MyTxTZ5MhhqGyAHGifp0W3J2/view?usp=sharing"
  },
  "home": {
    "greetings": "HeyðŸ‘‹,",
    "me": "My name is",
    "myName": "Matheus Brito",
    "whatIAm": "I'm a",
    "whatIAmList": [
      "Software Engineer",
      "Fullstack Developer",
      "Backend Developer",
      "Frontend Developer"
    ],
    "getInTouch": "Get in touch"
  },
  "about": {
    "title": "../about",
    "subtitle": "Who I Am",
    "description": "I'm a Full Stack Software Engineer focused on building scalable and high-performing Web applications. I have experience developing modern front-end interfaces using TypeScript, React, and Angular, and robust back-end systems using C#, .NET, ASP.NET. I follow the SOLID principles, CLEAN architecture and write maintainable, testable code that supports long-term scalability.\nMy experience extends across SQL (PostgreSQL, MySQL, SQL Server) and NoSQL (MongoDB, Redis) databases, as well as designing and implementing microservices and event-driven architectures. I've worked with cloud services on Azure and integrated various third-party APIs to enable features like messaging, social connectivity, and automation.\nI'm also exploring how AI can enhance automation and improve user experience across different parts of an application.\nWhat drives me is the challenge of solving real problems through clean, scalable solutionsâ€”whether on the front-end, back-end, or infrastructure level. I'm constantly learning and adapting to new technologies, always open to opportunities that push me to grow and deliver impactful software."
  },
  "skills": {
    "title": "../skills",
    "subtitle": "What I can do",
    "front-end": "Front end",
    "back-end": "Back end",
    "database": "Database",
    "cloud": "Cloud & Infra",
    "others": "Others",
    "experience": "of experience"
  },
  "experiences": {
    "title": "../experiences",
    "subtitle": "Where I worked",
    "skills": "Skills",
    "positions": {
      "evolveIt": "Software Engineer",
      "techSolutio": "Software Developer",
      "fransciscoFarm": "Software Developer",
      "dantasEletro": "Software Developer",
      "capitalNerd": "Software Developer"
    },
    "descriptions": {
      "evolveIt": "Developed a multi-tenant SaaS platform focused on customer communication and automation. Integrated messaging channels like SMS, Email, WhatsApp, and Facebook with AI to improve interaction quality. Built scalable APIs and responsive UIs aligned with Figma designs.",
      "techSolutio": "Implemented a unified system to process telecom failures across various equipment types. Built scalable, event-driven microservices using asynchronous communication to improve service restoration time.",
      "fransciscoFarm": "Improved user access control and traceability by enhancing authentication and implementing an audit system to log user actions. Developed a mobile inventory app using Flutter that worked offline and synchronized data when connected, using QR code scanning to streamline operations in areas without internet.",
      "dantasEletro": "Modernized legacy sales workflows with an automation tool that streamlined user experience and reduced operational steps. Worked on both backend and frontend using .NET and React.",
      "capitalNerd": "Maintained and improved a custom ERP system, reducing bug resolution time and enhancing performance. Created background jobs with Hangfire and contributed to the Angular-based frontend."
    }
  },
  "contact": {
    "title": "../contact",
    "subtitle": "Get in touch",
    "labels": {
      "name": "Name",
      "email": "Email",
      "message": "Message"
    },
    "errors": {
      "name": "The name must have at least 3 chars.",
      "email": "Invalid email.",
      "message": "The message must have at least 3 chars.",
      "request": "Error trying send email."
    },
    "success": {
      "request": "Email send successfully."
    },
    "send": "Send",
    "sending": "Sending..."
  }
}
